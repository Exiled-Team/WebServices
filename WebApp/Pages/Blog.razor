@page "/Blog"
@layout DefaultLayout
@using WebApp.Components.Services
@using WebApp.Deployment.Services
@using WebApp.Shared.Layouts
@using MarkdownArticle = WebApp.Components.Markdown.MarkdownArticle
@inject IConfigLoaderService ConfigLoader

<AdditiveHead Title="Blog" Description="Exiled Framework"></AdditiveHead>

@{
    ConfigLoader.LoadConfigs("Blog");
}

<body>

<div style="height: 15vh"></div>

<section class="section docs" aria-label="docs">
    <div class="container">

        <h2 class="headline headline-2 section-title">
            <span class="span">Exiled</span> Blog
        </h2>

        <p class="section-text">
            The Exiled team's official channel for providing updates. All significant information, such as release notes or deprecation notices, will be shared here initially.
        </p>

        <div class="docs-flex">
            @{
                int count = 0;
            }
            @foreach (MarkdownArticle card in Articles)
            {
                if (count >= Config.DisplayLimit)
                    break;

                ++count;
                int id = card.GetHashCode();
                string href = $"/Article/{@card.Name}";
                <div class="card docs-card extended" data-arrow="@id">

                    <div class="card-content">

                        <h3 class="headline headline-3">
                            <a href="@href" class="card-title hover-2 icon-label">
                                <span>@card.Title</span>
                            </a>
                        </h3>
                        <p class="card-subtitle">Published: @card.Date</p>
                        <p class="card-subtitle">@card.Preview</p>

                        <div class="card-wrapper">
                            <a href="@href" class="card-btn icon-label">
                                <span class="span">Read article</span>
                                <ion-icon name="arrow-forward-outline" class="arrow-ptr arrow-ptr-right" data-arrow-id="@id"></ion-icon>
                            </a>
                        </div>

                    </div>

                </div>
            }
        </div>

    </div>

    <img src="./assets/images/background/shadow-3.svg" width="500" height="1500" loading="lazy" alt="" class="docs-bg">
    <img src="./assets/images/background/shadow-2.svg" width="500" height="1500" loading="lazy" alt="" class="docs-bg">

</section>

</body>

@code {
    private IEnumerable<MarkdownArticle>? _articles;

    public IEnumerable<MarkdownArticle> Articles => _articles ??= ArticleService.Instance.Articles.Where(article => article.CanBeDisplayed).ToList();

    public Configs.Blog Config => ConfigLoader.GetConfig<Configs.Blog>();
}